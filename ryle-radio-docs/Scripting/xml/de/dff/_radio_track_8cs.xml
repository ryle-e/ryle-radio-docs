<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="de/dff/_radio_track_8cs" kind="file" language="C#">
    <compoundname>RadioTrack.cs</compoundname>
    <innerclass refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track" prot="public">RyleRadio::Tracks::RadioTrack</innerclass>
    <innernamespace refid="da/d5f/namespace_ryle_radio">RyleRadio</innernamespace>
    <innernamespace refid="d0/d28/namespace_ryle_radio_1_1_tracks">RyleRadio::Tracks</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using<sp/></highlight><highlight class="normal">System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d0/d28/namespace_ryle_radio_1_1_tracks" kindref="compound">RyleRadio.Tracks</ref></highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>track<sp/>in<sp/>a<sp/>RadioData,<sp/>playable<sp/>in<sp/>a<sp/>RadioOutput</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>are<sp/>your<sp/>basic<sp/>objects<sp/>to<sp/>be<sp/>played<sp/>in<sp/>the<sp/>radio,<sp/>can<sp/>be<sp/>clips,<sp/>procedural,<sp/>stations,<sp/>and<sp/>more<sp/>if<sp/>you<sp/>create<sp/>custom<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>[System.Serializable]</highlight></codeline>
<codeline lineno="9" refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/dbc/class_ryle_radio_1_1_tracks_1_1_radio_track" kindref="compound">RadioTrack</ref><sp/>:<sp/><ref refid="d3/df2/interface_ryle_radio_1_1_tracks_1_1_i_radio_track" kindref="compound">IRadioTrack</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>main<sp/>comments<sp/>in<sp/>IRadioTrack.cs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>!!!<sp/>IMPORTANT<sp/>NOTE<sp/>-<sp/>if<sp/>you&apos;re<sp/>creating<sp/>a<sp/>custom<sp/>RadioTrack,<sp/>you<sp/>need<sp/>to<sp/>both<sp/>inherit<sp/>from<sp/>this<sp/>class<sp/>AND<sp/>have<sp/>a<sp/>const<sp/>string<sp/>named<sp/>DISPLAY_NAME</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>the<sp/>version<sp/>of<sp/>c#<sp/>unity<sp/>uses<sp/>does<sp/>not<sp/>support<sp/>static<sp/>virtual<sp/>data,<sp/>we<sp/>have<sp/>no<sp/>way<sp/>of<sp/>enforcing<sp/>that<sp/>you<sp/>do<sp/>this-<sp/>but<sp/>you<sp/>will<sp/>get<sp/>errors<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>necessary<sp/>for<sp/>wrappers<sp/>when<sp/>they&apos;re<sp/>listing<sp/>each<sp/>available<sp/>track<sp/>type<sp/>in<sp/>a<sp/>dropdown-<sp/>NaughtyAttributes&apos;<sp/>reflection<sp/>system<sp/>is<sp/>used<sp/>to<sp/>pull</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-the<sp/>display<sp/>id<sp/>so<sp/>that<sp/>it&apos;s<sp/>selectable<sp/>in<sp/>the<sp/>inspector.<sp/>the<sp/>only<sp/>downside<sp/>is<sp/>a<sp/>lack<sp/>of<sp/>enforcement<sp/>:(((</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>SampleRate<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SampleCount<sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Init();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">abstract</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>GetSample(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_sampleIndex);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddToPlayerEndCallback(ref<sp/>Action&lt;RadioTrackPlayer&gt;<sp/>_callback)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/GitHub/ryle-radio/Assets/RyleRadio/Scripts/Runtime/Tracks/RadioTrack.cs"/>
  </compounddef>
</doxygen>
